@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html,
body {
  width: 100%;
  background: #fffefe;
  font-style: normal;
  overflow-x: hidden;
  font-size: 16px;
}

a {
  text-decoration: none;
  color: inherit;
}

::-webkit-scrollbar {
  width: 5px;
  -webkit-border-radius: 0px;
  border-radius: 0px;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

::-webkit-scrollbar-thumb {
  -webkit-border-radius: 0px;
  border-radius: 0px;
  background: #e9d4d4;
}
::-webkit-scrollbar-thumb:hover {
  background: #b98787;
}

ul {
  list-style: none;
}

input:focus,
select:focus,
textarea:focus,
button:focus {
  outline: none;
}

button {
  border: none;
  cursor: pointer;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}

/* Checkbox */

.path {
  fill: none;
  stroke: #bf0000;
  stroke-width: 4;
  stroke-linecap: round;
  stroke-linejoin: round;
  transition: stroke-dasharray 0.5s ease, stroke-dashoffset 0.5s ease;
  stroke-dasharray: 241 9999999;
  stroke-dashoffset: 0;
}

.checkbox:checked ~ svg .path {
  stroke-dasharray: 70.5096664428711 9999999;
  stroke-dashoffset: -262.2723388671875;
}

/* page loader  */
.loader {
  position: relative;
  width: 1.5em;
  aspect-ratio: 1/2;
  filter: url(#goo);
}

#goo {
  display: none;
}

.loader:before,
.loader:after {
  content: "";
  position: absolute;
  inset: 0;
  margin: auto;
  width: 100%;
  aspect-ratio: 1/1;
  animation: 1.5s ease-in-out infinite loader;
  border-radius: 50%;
}

.loader:before {
  background: linear-gradient(#bf0000, #bf0000);
}

.loader:after {
  animation-delay: 0.75s;
  background: linear-gradient(#bf0000, #bf0000);
}

@keyframes loader {
  0%,
  50%,
  100% {
    transform: translateY(0);
  }

  25% {
    transform: translateY(99%);
  }

  75% {
    transform: translateY(-99%);
  }
}

/* default button loader  */
.btnLoader {
  border: 3px solid #bf0000;
  border-left-color: transparent;
  border-radius: 50%;
}

.btnLoader {
  border: 3px solid #bf0000;
  border-left-color: transparent;
  width: 24px;
  height: 24px;
}

.btnLoader {
  border: 3px solid #bf0000;
  border-left-color: transparent;
  width: 24px;
  height: 24px;
  animation: spin89345 1s linear infinite;
}

@keyframes spin89345 {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/* white button loader  */

.btnLoaderWhite {
  border: 3px solid #fff;
  border-left-color: transparent;
  border-radius: 50%;
}

.btnLoaderWhite {
  border: 3px solid #fff;
  border-left-color: transparent;
  width: 24px;
  height: 24px;
}

.btnLoaderWhite {
  border: 3px solid #fff;
  border-left-color: transparent;
  width: 24px;
  height: 24px;
  animation: spin89346 1s linear infinite;
}

@keyframes spin89346 {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.checkbox-wrapper input[type="checkbox"] {
  display: none;
}

.checkbox-wrapper .terms-label {
  cursor: pointer;
  display: flex;
  align-items: center;
}

.checkbox-wrapper .checkbox-svg {
  width: 20px;
  height: 20px;
}

.checkbox-wrapper .checkbox-box {
  fill: #e9e9e9;
  stroke: #bf0000;
  stroke-dasharray: 800;
  stroke-dashoffset: 800;
  transition: stroke-dashoffset 0.3s ease-in;
}

.checkbox-wrapper .checkbox-tick {
  stroke: #bf0000;
  stroke-dasharray: 172;
  stroke-dashoffset: 172;
  transition: stroke-dashoffset 0.3s ease-in;
}

.checkbox-wrapper input[type="checkbox"]:checked + .terms-label .checkbox-box,
.checkbox-wrapper input[type="checkbox"]:checked + .terms-label .checkbox-tick {
  stroke-dashoffset: 0;
  fill: #fff;
}

.input-group {
  position: relative;
}

.input {
  border: solid 1.5px #111;
  padding: 1rem;
  font-size: 1rem;
  color: #111;
  transition: border 150ms cubic-bezier(0.42, 0.95, 0.42, 0.8);
}

.user-label {
  position: absolute;
  left: 15px;
  top: -3px;
  color: #989898;
  pointer-events: none;
  transform: translateY(1rem);
  transition: 150ms cubic-bezier(0.42, 0.95, 0.42, 0.8);
}

.input:focus,
.input:valid {
  outline: none;
  border-top: 1.5px solid #bf0000;
  border-bottom: 1.5px solid #bf0000;
  border-left: 1.5px solid #bf0000;
  border-right: 1.5px solid #bf0000;
}
.input:focus ~ label,
.input:valid ~ label {
  left: 2px;
  transform: translateY(-50%) scale(0.8);
  background-color: #fff;
  color: #bf0000;
  padding: 0 0.5rem;
}
